@startuml

!startsub NotificationRoot

interface NotificationService {
  + getNotificationById(id: DomainEventId): Promise<Notification>
  + insertAnomalyNotification(notification: Notification): Promise<string>
  + sendMailNotification(notification: Notification, contacts: Contact[]): void
  + deleteNotification(id: string): void
}
!endsub NotificationRoot

NotificationService --> MailService : uses
NotificationService --> NotificationFactory : uses

interface MailService {
  + sendMail(to: string, notification: Notification): void
}

interface Notification

interface NotificationFactory {
  + createAnomalyNotification(id: string, anomaly: Anomaly): Notification
}

NotificationFactory -left-> Notification : creates

@enduml
